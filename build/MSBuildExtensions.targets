<Project>

  <Target Name="GenerateMSBuildExtensions"
          DependsOnTargets="GenerateBundledVersionsProps;GenerateBundledCliToolsProps" />

  <Target Name="GenerateBundledVersionsProps" DependsOnTargets="RunResolvePackageDependencies">
    <PropertyGroup>
      <BundledVersionsPropsFileName>Microsoft.NETCoreSdk.BundledVersions.props</BundledVersionsPropsFileName>
    </PropertyGroup>

    <!--
      The bundled version of Microsoft.NETCore.App is determined statically from DependencyVersions.props whereas the bundled version
      of NETStandard.Library is defined by what Microsoft.NETCore.App pulls in. This digs in to the package resolution items of
      of our build against Microsoft.NETCore.App to find the correct NETStandard.Library version
    -->
    <ItemGroup>
      <_NETStandardLibraryPackageVersions Include="@(PackageDefinitions->'%(Version)')"
                                   Condition="%(PackageDefinitions.Name) == 'NetStandard.Library'" />
      <_NETCorePlatformsPackageVersions Include="@(PackageDefinitions->'%(Version)')"
                                   Condition="%(PackageDefinitions.Name) == 'Microsoft.NETCore.Platforms'" />
    </ItemGroup>

    <Error Condition="@(_NETStandardLibraryPackageVersions->Distinct()->Count()) != 1"
           Text="Failed to determine the NETStandard.Library version pulled in Microsoft.NETCore.App" />
    <Error Condition="@(_NETCorePlatformsPackageVersions->Distinct()->Count()) != 1"
           Text="Failed to determine the Microsoft.NETCore.Platforms version pulled in Microsoft.NETCore.App" />

    <PropertyGroup>
      <_NETCoreAppPackageVersion>$(MicrosoftNETCoreAppPackageVersion)</_NETCoreAppPackageVersion>
      <_NETStandardLibraryPackageVersion>@(_NETStandardLibraryPackageVersions->Distinct())</_NETStandardLibraryPackageVersion>
      <_NETCorePlatformsPackageVersion>@(_NETCorePlatformsPackageVersions->Distinct())</_NETCorePlatformsPackageVersion>
      <_AspNetCoreAllPackageVersion>$(MicrosoftAspNetCoreAllPackageVersion)</_AspNetCoreAllPackageVersion>
      <_AspNetCoreAppPackageVersion>$(MicrosoftAspNetCoreAppPackageVersion)</_AspNetCoreAppPackageVersion>

      <!-- Use only major and minor in target framework version -->
      <_NETCoreAppTargetFrameworkVersion>$(_NETCoreAppPackageVersion.Split('.')[0]).$(_NETCoreAppPackageVersion.Split('.')[1])</_NETCoreAppTargetFrameworkVersion>
      <_NETStandardTargetFrameworkVersion>$(_NETStandardLibraryPackageVersion.Split('.')[0]).$(_NETStandardLibraryPackageVersion.Split('.')[1])</_NETStandardTargetFrameworkVersion>
      <_AspNetCoreAllTargetFrameworkVersion>$(_NETCoreAppTargetFrameworkVersion)</_AspNetCoreAllTargetFrameworkVersion>
      <_AspNetCoreAppTargetFrameworkVersion>$(_AspNetCoreAllTargetFrameworkVersion)</_AspNetCoreAppTargetFrameworkVersion>

      <_NETCoreSdkIsPreview Condition=" '$(DropSuffix)' != 'true' ">true</_NETCoreSdkIsPreview>
    </PropertyGroup>

    <ItemGroup>
      <BundledVersionsVariable Include="BundledAspNetCoreAllTargetFrameworkVersion" Value="$(_AspNetCoreAllTargetFrameworkVersion)" />
      <BundledVersionsVariable Include="BundledAspNetCoreAllPackageVersion" Value="$(_AspNetCoreAllPackageVersion)" />
      <BundledVersionsVariable Include="BundledAspNetCoreAppTargetFrameworkVersion" Value="$(_AspNetCoreAppTargetFrameworkVersion)" />
      <BundledVersionsVariable Include="BundledAspNetCoreAppPackageVersion" Value="$(_AspNetCoreAppPackageVersion)" />
    </ItemGroup>

    <ItemGroup Condition=" '$(IncludeAspNetCoreRuntime)' == 'false' ">
      <!--
        These properties indicate that the ASP.NET Core shared runtime is not bundled on this platform, so the SDK should not
        treat these packages as the 'platform' base.

        The bundled aspnet packages versions should still be set, however, so the default, version-less PackageReference
        still works.
        See also https://github.com/aspnet/Universe/pull/1130.
      -->
      <BundledVersionsVariable Include="_AspNetCoreAppSharedFxIsEnabled" Value="false" />
      <BundledVersionsVariable Include="_AspNetCoreAllSharedFxIsEnabled" Value="false" />
    </ItemGroup>

    <PropertyGroup>
      <BundledVersionsPropsContent>
<![CDATA[
<!--
***********************************************************************************************
$(BundledVersionsPropsFileName)

WARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and have
          created a backup copy.  Incorrect changes to this file will make it
          impossible to load or build your projects from the command-line or the IDE.

Copyright (c) .NET Foundation. All rights reserved.
***********************************************************************************************
-->
<Project>
  <PropertyGroup>
    <NETCoreAppMaximumVersion>$(_NETCoreAppTargetFrameworkVersion)</NETCoreAppMaximumVersion>
    <BundledNETCoreAppTargetFrameworkVersion>$(_NETCoreAppTargetFrameworkVersion)</BundledNETCoreAppTargetFrameworkVersion>
    <BundledNETCoreAppPackageVersion>$(_NETCoreAppPackageVersion)</BundledNETCoreAppPackageVersion>
    <BundledNETStandardTargetFrameworkVersion>$(_NETStandardTargetFrameworkVersion)</BundledNETStandardTargetFrameworkVersion>
    <BundledNETStandardPackageVersion>$(_NETStandardLibraryPackageVersion)</BundledNETStandardPackageVersion>
    <BundledNETCorePlatformsPackageVersion>$(_NETCorePlatformsPackageVersion)</BundledNETCorePlatformsPackageVersion>
    @(BundledVersionsVariable->'<%(Identity)>%(Value)</%(Identity)>', '%0A    ')
    <NETCoreSdkVersion>$(SdkVersion)</NETCoreSdkVersion>
    <_NETCoreSdkIsPreview>$(_NETCoreSdkIsPreview)</_NETCoreSdkIsPreview>
    <UseBundledNETCoreAppPackageVersionAsDefaultNetCorePatchVersion>true</UseBundledNETCoreAppPackageVersionAsDefaultNetCorePatchVersion>

    <!-- Latest patch versions for each minor version of .NET Core -->
    <LatestPatchVersionForNetCore1_0 Condition="'$(LatestPatchVersionForNetCore1_0)' == ''">1.0.11</LatestPatchVersionForNetCore1_0>
    <LatestPatchVersionForNetCore1_1 Condition="'$(LatestPatchVersionForNetCore1_1)' == ''">1.1.8</LatestPatchVersionForNetCore1_1>
    <LatestPatchVersionForNetCore2_0 Condition="'$(LatestPatchVersionForNetCore2_0)' == ''">2.0.7</LatestPatchVersionForNetCore2_0>
  </PropertyGroup>
</Project>
]]>
    </BundledVersionsPropsContent>
  </PropertyGroup>

    <WriteLinesToFile File="$(SdkOutputDirectory)/$(BundledVersionsPropsFileName)"
                      Lines="$(BundledVersionsPropsContent)"
                      Overwrite="true" />
  </Target>

  <Target Name="GenerateBundledCliToolsProps">
    <PropertyGroup>
      <BundledBundledCliToolsPropsFileName>Microsoft.NETCoreSdk.BundledCliTools.props</BundledBundledCliToolsPropsFileName>
    </PropertyGroup>

    <PropertyGroup>
      <BundledBundledCliToolsPropsContent>
<![CDATA[
<!--
***********************************************************************************************
$(BundledBundledCliToolsPropsFileName)

WARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and have
          created a backup copy.  Incorrect changes to this file will make it
          impossible to load or build your projects from the command-line or the IDE.

Copyright (c) .NET Foundation. All rights reserved.
***********************************************************************************************
-->
<Project>
  <ItemGroup>
@(BundledDotnetTools->HasMetadata('ObsoletesCliTool')->'    %3CBundledDotNetCliToolReference Include="%(ObsoletesCliTool)" /%3E','%0A')
  </ItemGroup>
</Project>
]]>
    </BundledBundledCliToolsPropsContent>
  </PropertyGroup>

    <WriteLinesToFile File="$(SdkOutputDirectory)/$(BundledBundledCliToolsPropsFileName)"
                      Lines="$(BundledBundledCliToolsPropsContent)"
                      Overwrite="true" />
  </Target>
</Project>
